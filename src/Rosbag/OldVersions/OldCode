##################################### FOURIER TRANSFORMATION

#import numpy as numpy
#import matplotlib.pyplot as pylab
#import scipy.fftpack

#Y    = numpy.fft.fft(forcesZ_Stiffness)
#freq = numpy.fft.fftfreq(len(forcesZ_Stiffness), timeFK[1] - timeFK[0])

#pylab.figure()
#pylab.plot( freq, numpy.abs(Y) )
#pylab.xlabel('Frequency [Hz]')
#pylab.ylabel('Amplitude [dB]')
#pylab.figure()
#pylab.plot(freq, numpy.angle(Y) )
#pylab.show()



import numpy as N
fit = N.polyfit(posesZ_Stiffness, forcesZ_Stiffness, 1)
y_new = N.polyval(fit, posesZ_Stiffness)




import matplotlib.pyplot as plt
### Data for stiffness calculation ###
plt.figure(1)
plt.plot(posesZ_Stiffness, forcesZ_Stiffness, 'b', linewidth=2.0)
plt.plot(posesZ_Stiffness, y_new, 'b', linewidth=2.0)
plt.title('Applied force along the Z-Coordinate in the tool-frame [N]')
plt.xlabel('Z-Coordinate of the US-Probe in the world-frame [m]')
plt.ylabel('Applied force along the Z-Coordinate in the tool-frame [N]')
plt.xlim(plt.xlim()[::-1])
plt.grid('on')
plt.autoscale(enable=True, axis='both', tight=None)
plt.savefig("Fig_Fz_Stiffness.png")
plt.show()

### Complete Data ###
plt.figure(2)
plt.plot(timeF, forcesZ, 'r', label="Z force tool frame", linewidth=2.0)
plt.plot(state_flag_time, state_flag, 'k-', linewidth=2.0)
plt.ylabel('Z-Force on the US-Probe in tool-frame [N]')
plt.xlabel('Time [s]')
plt.legend(loc="upper right")
plt.grid('on')

plt.twinx()
plt.plot(timeP, posesZ, 'b', label="Z position tool frame", linewidth=2.0)
plt.ylabel('Z-Coordinate of the US-Probe in the world-frame [m]')
plt.legend(loc="upper left")
plt.autoscale(enable=True, axis='both', tight=None)
plt.savefig("Fig_Pose_time.png")
plt.show()

plt.figure(3)
plt.plot(timeP, posesX, 'b', label="X position tool frame", linewidth=2.0)
plt.plot(timeP, posesY, 'k', label="Y position tool frame", linewidth=2.0)
plt.plot(timeP, posesZ, 'r', label="Z position tool frame", linewidth=2.0)
plt.ylabel('Position of the US-Probe in the world-frame [m]')
plt.legend(loc="upper right")
plt.grid('on')
plt.title('Time [s]')

plt.autoscale(enable=True, axis='both', tight=None)
plt.savefig("X_Y_POS.png")
plt.show()

